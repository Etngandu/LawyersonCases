@using LawyerOffice.Entities;
@model ENB.Mvc.Lawyer.Models.DisplayLawyerOnCase;
@{
    ViewBag.Title = "Index";

}

<br />
<div class="alert alert-info" role="alert">
    <h2><strong>Billing Overview  <i class="fas fa-file-invoice-dollar"></i></strong></h2>
</div>
<table id="Lawyertable" class="table table-striped table-bordered" width="100%">
    <thead>
        <tr>
            <th>Id</th>
            <th>Case Title</th>
            <th>NameLawyer</th>
            <th>Date creation</th>
            <th>Duration</th>
            <th>Case status</th>
            <th>Billing Case </th>
        </tr>
    </thead>
    <tfoot>
        <tr>
            <th colspan="6" style="text-align:right">Total:</th>
            <th></th>
        </tr>
    </tfoot>
</table>

<link href="~/lib/DataTables/css/dataTables.bootstrap4.min.css" rel="stylesheet" type="text/css" />


@section scripts{
    <script type="text/javascript" charset="utf8" src="https://code.jquery.com/jquery-3.5.1.js"></script>
    <script type="text/javascript" charset="utf8" src="~/lib/DataTables/js/jquery.dataTables.min.js"></script>
    <script type="text/javascript" charset="utf8" src="https://cdn.datatables.net/1.11.4/js/dataTables.bootstrap4.min.js"></script>
   
    <script>
            var Popup, datatable, IdLawyer = parseInt('@ViewBag.Lawyer_Id'),IdWard=parseInt('@ViewBag.Ward_Id')
            $(document).ready(function () {
                datatable = $("#Lawyertable").DataTable({
                    "ajax": {
                        "url": "/Billing/GetCasesOnLawyerList",
                        "type": "GET",
                        "datatype": "json"
                    },
                    "columns": [

                        { "data": "id" },
                        {
                            "data": "titlecase"  
                        },
                        {
                            "data": "nameLawyer"                            
                        },                        
                        {
                            "data": "dateCreated",
                            "render": dateFormatter
                        },
                        {
                            "data": "duration"
                        },
                        {
                            "data": "case_status",
                            "render": Case_status_parse
                        },
                        {
                            "data": "billing_case",
                            "render": EuroCurrency

                        },                        

                    ],
                    "language": {

                        "emptyTable": "No data Found, Please Click On <b>Add New</b> Button"
                    },

                    "footerCallback": function (row, data, start, end, display) {
                        var api = this.api(),data;
                        
                        console.log(api);
                        // Remove the formatting to get integer data for summation
                        var intVal = function (i) {
                            return typeof i === 'string' ?
                                i.replace(/[\$,]/g, '') * 1 :
                                typeof i === 'number' ?
                                    i : 0;
                        };

                        // Total over all pages
                        total = api
                            .column(6)
                            .data()
                            .reduce(function (a, b) {
                                return intVal(a) + intVal(b);
                            }, 0);

                        // Total over this page
                        pageTotal = api
                            .column(6, { page: 'current' })
                            .data()
                            .reduce(function (a, b) {
                                return intVal(a) + intVal(b);
                            }, 0);

                        // Update footer
                        $(api.column(6).footer()).html(
                            '€ ' + pageTotal.toFixed(2) + ' ( €' + total.toFixed(2) + ' total)'
                        );
                    }


                });

            });




      function  dateFormatter(data) {
            var dateAsString = data;

            var yearNumber = dateAsString.substring(0, 4);
            var monthNumber = dateAsString.substring(5, 7);
            var dayNumber = dateAsString.substring(8, 10);
          var dat = dayNumber + "/" + monthNumber + "/" + yearNumber;
            return dat;
        }


        function Reference_roleparse(data) {
                var refrole;
                switch (data) {
                    case 1:
                        refrole ="Advise and represent clients in courts"
                        break;
                    case 2:
                        refrole ="Communicate with clients,colleagues,judges"
                        break;
                    case 3:
                        refrole = "Conduct research and analysis of legal problems"
                        break;
                    case 4:
                        refrole = "Interpret laws, rulings, and regulations"
                        break;
                    default:
                    // code block
                }
                return refrole;
        }

        function Case_status_parse(data) {
            var csstt;
            switch (data) {
                case 1:
                    csstt = "Open"
                    break;
                case 2:
                    csstt = "Closed"
                    break;
                default:
                // code block
            }
            return csstt;
        }

        function EuroCurrency(data){
            var fixedEuro = Number(data).toFixed(2);
            var formatEuro = fixedEuro + " €";

            return formatEuro;
        }
      
            
        

    </script>
}
